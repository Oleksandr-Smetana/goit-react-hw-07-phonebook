{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/store.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","map","item","name","includes","alert","filter","contact","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","axios","defaults","baseURL","addContact","number","dispatch","post","then","data","catch","error","deleteContact","contactId","delete","connect","onSubmit","ContactsOperations","useState","setName","setNumber","handleChange","e","currentTarget","value","resetForm","className","s","form","preventDefault","label","input","type","pattern","title","onChange","required","submitButton","console","log","visibleContacts","normalizedFilter","toLowerCase","getVisibleContacts","onDelete","length","contactList","contactItem","contactInfo","deleteButton","onClick","notification","evt","Phonebook","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,qB,mBCAjDD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,wB,wJCC3EC,EAAuBC,YAClC,iCAEWC,EAAuBD,YAClC,iCAEWE,EAAqBF,YAChC,+BAEWG,EAAoBH,YAC/B,8BAEWI,EAAoBJ,YAC/B,8BAEWK,EAAkBL,YAC7B,4BAEWM,EAAuBN,YAClC,iCAEWO,EAAuBP,YAClC,iCAEWQ,EAAqBR,YAChC,+BAGWS,EAAeT,YAC1B,yBCbIU,EAAQC,YAAc,IAAD,mBACxBV,GAAuB,SAACW,EAAD,YAAMC,WADL,cAExBT,GAAoB,SAACU,EAAD,GAAyB,IAAfD,EAAc,EAAdA,QAE7B,OADiBC,EAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QACxBC,SAASL,EAAQI,OAG/BE,MAAM,GAAD,OAAIN,EAAQI,KAAZ,uBACEH,GAHD,CAAED,GAAR,mBAAoBC,OALC,cAWxBP,GAAuB,SAACO,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACtBC,EAAMM,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAOT,QAZhB,IAerBU,EAAUZ,aAAc,GAAD,mBAC1BZ,GAAuB,kBAAM,KADH,cAE1BE,GAAuB,kBAAM,KAFH,cAG1BC,GAAqB,kBAAM,KAHD,cAK1BC,GAAoB,kBAAM,KALA,cAM1BC,GAAoB,kBAAM,KANA,cAO1BC,GAAkB,kBAAM,KAPE,cAS1BC,GAAuB,kBAAM,KATH,cAU1BC,GAAuB,kBAAM,KAVH,cAW1BC,GAAqB,kBAAM,KAXD,IAcvBY,EAAST,YAAc,GAAD,eACzBF,GAAe,SAACG,EAAD,YAAMC,YAGTW,cAAgB,CAC7Bd,QACAU,SACAG,YCFaE,EAXDC,YAAe,CAC3BC,QAAS,CACPC,SAAUC,GAEZC,WA/BoB,SAAAC,GAAoB,OAcpCA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CACdC,IACAC,IACAC,IACAC,IACAC,IACAC,SAUVC,UAAUC,I,kDCjCZC,IAAMC,SAASC,QACb,8CAEK,IAkBMC,EAAa,SAAC5B,EAAM6B,GAAP,OAAkB,SAAAC,GAC1C,IAAMnB,EAAW,CAAEX,OAAM6B,UACzBC,EAAS5C,KACTuC,IACGM,KAAK,YAAapB,GAClBqB,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcH,EAAS3C,EAAkB8C,OAC9CC,OAAM,SAAAC,GAAK,OAAIL,EAAS1C,EAAgB+C,SAGhCC,EAAgB,SAAAC,GAAS,OAAI,SAAAP,GACxCA,EAASzC,KAEToC,IACGa,OADH,oBACuBD,IACpBL,MAAK,kBAAMF,EAASxC,EAAqB+C,OACzCH,OAAM,SAAAC,GAAK,OAAIL,EAASvC,EAAmB4C,S,uBC6BhD,IAKeI,cACb,MANyB,SAAAT,GAAQ,MAAK,CACtCU,SAAU,SAACxC,EAAM6B,GAAP,OACRC,EAASW,EAA8BzC,EAAM6B,QAGlCU,EA5Ef,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBE,mBAAS,IAAjC,mBAAO1C,EAAP,KAAa2C,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOb,EAAP,KAAee,EAAf,KAGMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlB/C,EAAR,EAAQA,KAAMgD,EAAd,EAAcA,MAEd,OAAQhD,GACN,IAAK,OACH2C,EAAQK,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAaAC,EAAY,WAChBN,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMM,UAAWC,IAAEC,KAAMZ,SAdN,SAAAM,GACnBA,EAAEO,iBAEFb,EAASxC,EAAM6B,GACfoB,KAUA,UACE,wBAAOC,UAAWC,IAAEG,MAApB,iBAEE,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,OACLxD,KAAK,OACLyD,QAAQ,yHACRC,MAAM,kcACNV,MAAOhD,EACP2D,SAAUd,EACVe,UAAQ,OAIZ,wBAAOV,UAAWC,IAAEG,MAApB,mBAEE,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,MACLxD,KAAK,SACLyD,QAAQ,yFACRC,MAAM,giBACNV,MAAOnB,EACP8B,SAAUd,EACVe,UAAQ,OAIZ,wBAAQV,UAAWC,IAAEU,aAAcL,KAAK,SAAxC,+B,gBCpCN,IAsBejB,eAdS,SAAA1C,GACtBiE,QAAQC,IAAIlE,GACZ,MAA0BA,EAAMc,SAE1BqD,EAZmB,SAACvE,EAAOU,GACjC,IAAM8D,EAAmB9D,EAAO+D,cAEhC,OAAOzE,EAAMU,QAAO,SAAAC,GAAO,OACzBA,EAAQJ,KAAKkE,cAAcjE,SAASgE,MAQdE,CAFxB,EAAQ1E,MAAR,EAAeU,QAGf,MAAO,CAAEQ,SAAUqD,MAIM,SAAAlC,GAAQ,MAAK,CACtCsC,SAAU,SAAA/D,GAAE,OACVyB,EAASW,EAAiCpC,QAG/BkC,EAnDf,YAA8C,IAAvB5B,EAAsB,EAAtBA,SAAUyD,EAAY,EAAZA,SAC/B,OACE,mCACuB,IAApBzD,EAAS0D,OACR,oBAAInB,UAAWC,IAAEmB,YAAjB,SACG3D,EAASb,KAAI,gBAAGO,EAAH,EAAGA,GAAIL,EAAP,EAAOA,KAAM6B,EAAb,EAAaA,OAAb,OACZ,qBAAIqB,UAAWC,IAAEoB,YAAjB,UACE,oBAAGrB,UAAWC,IAAEqB,YAAhB,UACGxE,EADH,KACW6B,KAEX,wBACEqB,UAAWC,IAAEsB,aACbpE,GAAIA,EACJqE,QAAS,kBAAMN,EAAS/D,IAH1B,sBAJiCA,QAevC,mBAAG6C,UAAWC,IAAEwB,aAAhB,+C,iBCLR,IASepC,eATS,SAAA1C,GAAK,MAAK,CAChCmD,MAAOnD,EAAMc,SAASR,WAGG,SAAA2B,GAAQ,MAAK,CACtC6B,SAAU,SAAAiB,GAAG,OACX9C,EAAStC,EAAaoF,EAAI7B,cAAcC,YAG7BT,EAzBf,YAAsC,IAApBS,EAAmB,EAAnBA,MAAOW,EAAY,EAAZA,SACvB,OACE,qBAAKT,UAAWC,IAAEhD,OAAlB,SACE,wBAAO+C,UAAWC,IAAEG,MAApB,kCAEE,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,OACLR,MAAOA,EACPW,SAAUA,YCTL,SAASkB,IACtB,OACE,sBAAK3B,UAAWC,IAAE2B,IAAlB,UACE,oBAAI5B,UAAWC,IAAEO,MAAjB,uBACA,cAAC,EAAD,IACA,oBAAIR,UAAWC,IAAEO,MAAjB,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,OCJNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUzE,MAAOA,EAAjB,SAKE,cAAC,EAAD,QAIJ0E,SAASC,eAAe,U,kBCnB1BvG,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,aAAe,oC,kBCAxID,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,YAAc,iCAAiC,aAAe,kCAAkC,aAAe,qC","file":"static/js/main.8e5026ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3P5r6\",\"title\":\"App_title__1mTLy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1i23P\",\"label\":\"Filter_label__28FzA\",\"input\":\"Filter_input__2do1e\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction(\r\n  'contacts/fetchContactsError',\r\n);\r\nexport const addContactRequest = createAction(\r\n  'contacts/addContactRequest',\r\n);\r\nexport const addContactSuccess = createAction(\r\n  'contacts/addContactSuccess',\r\n);\r\nexport const addContactError = createAction(\r\n  'contacts/addContactError',\r\n);\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction(\r\n  'contacts/deleteContactError',\r\n);\r\n\r\nexport const changeFilter = createAction(\r\n  'contacts/changeFilter',\r\n);\r\n","import {\r\n  createReducer,\r\n  combineReducers,\r\n} from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    let namesArray = state.map(item => item.name);\r\n    if (!namesArray.includes(payload.name)) {\r\n      return [payload, ...state];\r\n    } else {\r\n      alert(`${payload.name} is already exist!`);\r\n      return state;\r\n    }\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  // persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\n\r\nimport contactsReducers from './contacts/contacts-reducers';\r\n\r\nconst getMiddleware = getDefaultMiddleware =>\r\n  process.env.NODE_ENV === 'development'\r\n    ? getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [\r\n            FLUSH,\r\n            REHYDRATE,\r\n            PAUSE,\r\n            PERSIST,\r\n            PURGE,\r\n            REGISTER,\r\n          ],\r\n        },\r\n      }).concat(logger)\r\n    : getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: [\r\n            FLUSH,\r\n            REHYDRATE,\r\n            PAUSE,\r\n            PERSIST,\r\n            PURGE,\r\n            REGISTER,\r\n          ],\r\n        },\r\n      });\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducers,\r\n  },\r\n  middleware: getMiddleware,\r\n  devTools: process.env.NODE_ENV === 'development', // devTools применяются тлько в разработке\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL =\r\n  'https://618fc2d9f6bf450017484a37.mockapi.io';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  // try {\r\n  //   const { data } = axios.get('/contacts');\r\n  //   dispatch(fetchContactsSuccess(data));\r\n  // } catch (error) {\r\n  //   dispatch(fetchContactsError(error));\r\n  // }\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) =>\r\n      dispatch(fetchContactsSuccess(data)),\r\n    )\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contacts = { name, number };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', contacts)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default (fetchContacts, addContact, deleteContact);\r\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as ContactsOperations from '../../redux/contacts/contacts-operations';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // запись имени и номера телефона в стейт\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // добавление контакта в список контактов и сброс инпутов\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  // сброс стейта\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          value={name}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={number}\n          onChange={handleChange}\n          required\n        />\n      </label>\n\n      <button className={s.submitButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(ContactsOperations.addContact(name, number)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ContactForm);\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as ContactsOperations from '../../redux/contacts/contacts-operations';\n\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDelete }) {\n  return (\n    <>\n      {contacts.length !== 0 ? (\n        <ul className={s.contactList}>\n          {contacts.map(({ id, name, number }) => (\n            <li className={s.contactItem} key={id}>\n              <p className={s.contactInfo}>\n                {name}: {number}\n              </p>\n              <button\n                className={s.deleteButton}\n                id={id}\n                onClick={() => onDelete(id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={s.notification}>\n          There are no contacts yet...\n        </p>\n      )}\n    </>\n  );\n}\n\nconst getVisibleContacts = (items, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  const { items, filter } = state.contacts;\n\n  const visibleContacts = getVisibleContacts(items, filter);\n  return { contacts: visibleContacts };\n  // return { contacts: state.contacts };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id =>\n    dispatch(ContactsOperations.deleteContact(id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\n\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: evt =>\n    dispatch(changeFilter(evt.currentTarget.value)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import s from './App.module.css';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nexport default function Phonebook() {\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate\n        loading={null}\n        persistor={store.persistor}\n      > */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1WSxL\",\"label\":\"ContactForm_label__3KWdd\",\"input\":\"ContactForm_input__U41Bf\",\"submitButton\":\"ContactForm_submitButton__vnsxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2DfNs\",\"contactItem\":\"ContactList_contactItem__3FtCs\",\"contactInfo\":\"ContactList_contactInfo__tJYdO\",\"deleteButton\":\"ContactList_deleteButton__2CSi_\",\"notification\":\"ContactList_notification__1dafR\"};"],"sourceRoot":""}